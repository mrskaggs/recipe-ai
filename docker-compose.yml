version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: recipe-postgres
    environment:
      POSTGRES_DB: recipes
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d recipes"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - recipe-network

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: recipe-api
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: recipes
      DB_USER: postgres
      DB_PASSWORD: password123
      PORT: 3001
      NODE_ENV: production
      N8N_WEBHOOK_URL: https://n8n.wwwfake.com/webhook/6d9a4773-fb73-409c-b39a-cca1b6d82b41
    ports:
      - "${API_PORT:-3001}:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - recipe-network
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: recipe-frontend
    environment:
      VITE_API_BASE_URL: ${API_BASE_URL:-/api}
    ports:
      - "${FRONTEND_PORT:-8080}:80"
    depends_on:
      - api
    networks:
      - recipe-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  recipe-network:
    driver: bridge
